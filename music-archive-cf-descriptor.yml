AWSTemplateFormatVersion: '2010-09-09'
Description: Music Archive Stack
Parameters:
  Env:
    Type: String
  PublicURL:
    Type: String
  HostedZoneId:
    Type: String
  DNSCertARN:
    Type: String
  S3OriginAccessIdentity:
    Type: String
Conditions:
  CreateProdResources: !Equals [ !Ref Env, 'prod' ]
Resources:
  #S3 Dist Bucket
  MusicArchiveFeDistributionBucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:
        Fn::Join: [ '-', [ 'music-archive-fe-distribution', !Ref Env ] ]
      VersioningConfiguration:
        Status: Enabled
  MusicArchiveFeDistributionBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref MusicArchiveFeDistributionBucket
      PolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - Fn::Join: [ ' ', [ 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity', !Ref S3OriginAccessIdentity ] ]
            Action:
              - 's3:GetObject'
            Resource:
              Fn::Join: [ '', [ !GetAtt MusicArchiveFeDistributionBucket.Arn, '/*' ] ]
          - Effect: Allow
            Principal:
              AWS:
                - Fn::Join: [ ' ', [ 'arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity', !Ref S3OriginAccessIdentity ] ]
            Action:
              - 's3:ListBucket'
            Resource: !GetAtt MusicArchiveFeDistributionBucket.Arn
  #CloudFront distro to sit in front of bucket and reduce outbound cost
  MusicArchiveDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        Comment:
          Fn::Join: [ '', [ 'MusicArchive Distro [', !Ref Env, ']' ] ]
        Aliases:
        - !Ref PublicURL
        DefaultRootObject: index.html
        HttpVersion: http2
        ViewerCertificate:
          # AcmCertificateArn: !Ref DNSCertARN
          # Remove CloudFrontDefaultCertificate when DNSCert is usable
          CloudFrontDefaultCertificate: true
          # SslSupportMethod: sni-only
        Origins:
        - DomainName: !GetAtt MusicArchiveFeDistributionBucket.DomainName
          Id:
            Fn::Join: [ '-', [ 'origin', !GetAtt MusicArchiveFeDistributionBucket.DomainName ] ]
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join: [ '', [ 'origin-access-identity/cloudfront/', !Ref S3OriginAccessIdentity ] ]
        DefaultCacheBehavior:
          AllowedMethods:
          - GET
          - HEAD
          - OPTIONS
          TargetOriginId:
            Fn::Join: [ '-', [ 'origin', !GetAtt MusicArchiveFeDistributionBucket.DomainName ] ]
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
          # ViewerProtocolPolicy: redirect-to-https
          ViewerProtocolPolicy: allow-all
  MusicArchiveDistributionDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !Ref PublicURL
      Type: A
      AliasTarget:
        DNSName: !GetAtt MusicArchiveDistribution.DomainName
        EvaluateTargetHealth: false
        HostedZoneId: Z2FDTNDATAQYW2
